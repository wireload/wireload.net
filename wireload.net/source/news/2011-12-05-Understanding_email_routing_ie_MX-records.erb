---
title: Understanding email routing (i.e. MX-records)
author: Viktor Petersson
wordpress_id: 1004
wordpress_url: http://wireload.net/2011/12/understanding-email-routing-i-e-mx-records/
date: 2011-12-05 05:49:22
tags: dns, mx-records, smtp, the-email-school, tips, yippiemove
---
<img src="http://wireload.net/wp-content/uploads/2011/12/envelope.png" alt="" title="envelope" width="150" height="110" class="alignright size-full wp-image-1010" />One of the most frequent questions we get through <a href="http://www.yippiemove.com">YippieMove</a> relates to email routing. We touched briefly on this topic in the article <a href="http://wireload.net/2010/06/email-101-an-introduction-to-email-under-the-hood/"><i>Email 101 â€“ An introduction to email under the hood</i></a>. Yet, I feel the need to elaborate on this a bit more. In this article we'll put IMAP and POP3 aside, as those are protocols for <i>retrieving</i> email, and has <strong>nothing</strong> to do with the routing of your email (which is a common misconception).<br/><!--more--><br/>There is only one thing that affects the routing of your email, and that is the <a href="http://en.wikipedia.org/wiki/MX_record">MX-record</a>. Each domain (and sub-domain) need to have an MX-record in order to receive email. For instance example.com and foo.example.com can have two different MX-records. An MX-record is simply a DNS-entry that tells the sending server (SMTP-server) where to deliver the email. A typical MX-record would look something like this:<br/><pre lang="bash"><br/>example.com.		3600	IN	MX	0 mail.example.com.<br/></pre><br/>This means that all emails for example.com (i.e. user@example.com) should be delivered to 'mail.example.com'. This requires that 'mail.example.com' exists (either as a CNAME or a A-record). Please note that 'mail.example.com' may or may not be your IMAP/POP3 server too. However, that just means that your SMTP-server resides on the same host as your IMAP/POP3 server. For hosted environments, this is usually not the case, but fairly common if you're running your own server.<br/>There are two numeric values in the above record too. The first one is 3600, which is the TTL (Time to Live). This record tells other DNS-servers (and clients) that it is OK to cache the above record for up to 3600 seconds (or one hour). The second numerical value is '0' and is the MX-record priority. In this example, it doesn't matter, as we only have one record, but if we were to have multiple records, it would determine the priority order of the servers. If the first one fails, the second one will be used, and so on.<br/>Now let's move on to a bit more complicated setup. Let's use Google Apps as the example for this. Here's a typical setup for Google Apps:<br/><pre lang="bash"><br/>example.com.		14400	IN	MX	20 ALT1.ASPMX.L.GOOGLE.COM.<br/>example.com.		14400	IN	MX	30 ASPMX4.GOOGLEMAIL.COM.<br/>example.com.		14400	IN	MX	30 ASPMX5.GOOGLEMAIL.COM.<br/>example.com.		14400	IN	MX	30 ASPMX2.GOOGLEMAIL.COM.<br/>example.com.		14400	IN	MX	30 ASPMX3.GOOGLEMAIL.COM.<br/>example.com.		14400	IN	MX	20 ALT2.ASPMX.L.GOOGLE.COM.<br/>example.com.		14400	IN	MX	10 ASPMX.L.GOOGLE.COM.<br/></pre><br/>As you can see, there are multiple servers listed for the same domain (example.com). They all have the same TTL, namely 14400 (four hours). The interesting part here is the priority order. The sending server would try to deliver emails to the servers in the order from lowest priority value to highest until it finds one server who accepts the connection:<br/><ol><br/>	<li>ASPMX.L.GOOGLE.COM</li><br/>	<li>ALT2.ASPMX.L.GOOGLE.COM</li><br/>	<li>ALT1.ASPMX.L.GOOGLE.COM</li><br/>	<li>ASPMX4.GOOGLEMAIL.COM</li><br/>	<li>ASPMX5.GOOGLEMAIL.COM</li><br/>	<li>ASPMX2.GOOGLEMAIL.COM</li><br/>	<li>ASPMX3.GOOGLEMAIL.COM</li><br/></ol><br/>When working with DNS-configurations, there is a very handy command-line tool called 'dig' that is frequently used. To retrieve the MX-records for the domain example.com, you would simply run:<br/><pre lang="bash"><br/>$ dig example.com mx<br/></pre><br/>If you're not comfortable working with the command line, you can perform the same task by using a web-based tool, such as <a href="http://www.mxtoolbox.com/">MX Toolbox</a>.<br/>I hope this article helped you get a better understanding on how email routing works. If you have any questions, please leave a comment below. Also, don't forget to visit <a href="http://www.yippiemove.com">YippieMove</a> when you migrate email between systems.<br/>Want to learn more about email and email systems? Learn more in <a href="http://wireload.net/category/the-email-school/">The Email School</a>.